name: CI

on:
  push:
  pull_request:
  # Run daily to catch when Rust updates cause problems to happen.
  schedule:
    - cron: '00 01 * * *'

jobs:
  rust:
    name: Rust

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        toolchain: [ "stable" ]

    runs-on: ${{ matrix.os }}

    env:
      CARGO_INCREMENTAL: 0
      RUST_BACKTRACE: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}

      - name: Build
        run: cargo build

      - name: Test
        run: cargo test --workspace

      - name: Test (8k pages)
        run: cargo test --workspace --features std,extension,8k_pages --no-default-features

      - name: Test (large pages)
        run: cargo test --workspace --features std,extension,32k_pages --no-default-features

      - name: Test (256k pages)
        run: cargo test --workspace --features std,extension,256k_pages --no-default-features

      - name: Test (numa aware)
        run: TCMALLOC_NUMA_AWARE=1 cargo test --workspace --features numa_aware

      - name: Test (deprecated per thread cache)
        run: cargo test --workspace --features deprecated_perthread

      - name: Test (legacy locking)
        run: cargo test --workspace --features legacy_locking

  lint:
    name: Rustfmt / Clippy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy

      - name: Fmt
        run: cargo fmt --all -- --check

      - name: Clippy
        run: cargo clippy --workspace -- -D warnings

  # Detect cases where documentation links would be dead
  doc:
    name: Check documentation
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly

      # Note: We need to use nightly rust, and `cargo rustdoc` (yes, not `cargo
      # doc`) to actually get it to respect -D warnings... Using nightly also
      # gets us the nicer syntax for linking to functions, and is in-line with
      # what docs.rs uses.

      - name: 'Check documentation links in `mimalloc`'
        run: cargo rustdoc --features std,extension,8k_pages -- -D warnings --cfg docsrs

      - name: 'Check documentation links in `libtcmalloc-sys`'
        run: cargo rustdoc -p libtcmalloc-sys --features extension,8k_pages -- -D warnings --cfg docsrs
