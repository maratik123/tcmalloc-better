[package]
name = "tcmalloc-better"
version = "0.1.10"
edition = "2024"
rust-version = "1.87.0"
description = "A Rust wrapper over Google's TCMalloc memory allocator"
repository = "https://github.com/maratik123/tcmalloc-better"
license = "MIT"
keywords = [
    "tcmalloc",
    "allocator",
    "memory",
    "performance"
]
categories = [
    "memory-management",
    "api-bindings"
]
readme = "README.md"
authors = [
    "Marat Bukharov <marat.buharov@gmail.com>"
]
exclude = [
    "/.idea",
    "/.github",
]

[workspace]
members = [
    "libtcmalloc-sys/bazel-log-parser",
    "libtcmalloc-sys"
]

[dependencies]
libtcmalloc-sys = { path = "libtcmalloc-sys", version = "0.1.5", default-features = false }
document-features = "0.2"

[features]
default = ["std", "8k_pages", "extension"]
## enable std
std = []
## TCMalloc extension API
extension = ["libtcmalloc-sys/extension"]
## Enable NUMA-aware allocation. Need to use `TCMALLOC_NUMA_AWARE` environment variable at runtime.
## See [TCMalloc comments](https://github.com/google/tcmalloc/blob/master/tcmalloc/internal/numa.cc#L54)
numa_aware = ["libtcmalloc-sys/numa_aware"]
## Use deprecated per-thread caching. Newer systems with Linux kernel version >= 4.18 should not use this.
deprecated_perthread = ["libtcmalloc-sys/deprecated_perthread"]
## Use legacy locking for systems with disabled HugeTLB
## See [TCMalloc docs](https://github.com/google/tcmalloc/blob/master/docs/design.md#tcmalloc-backend)
legacy_locking = ["libtcmalloc-sys/legacy_locking"]

#! ### Logical Page Sizes (These features are mutually exclusive).
#! Larger page size leads to greater performance in expense to increased fragmentation.
#! See [TCMalloc tuning guide](https://github.com/google/tcmalloc/blob/master/docs/tuning.md#the-logical-page-size-for-tcmalloc):

## 8k pages
8k_pages = ["libtcmalloc-sys/8k_pages"]
## Large pages
32k_pages = ["libtcmalloc-sys/32k_pages"]
## 256k pages
256k_pages = ["libtcmalloc-sys/256k_pages"]
## 4k pages, option for memory constrained systems
small_but_slow = ["libtcmalloc-sys/small_but_slow"]


[package.metadata.docs.rs]
features = ["std", "extension", "8k_pages"]
# enable features in the documentation
rustdoc-args = ["--cfg", "docsrs"]
rustc-args = ["--cfg", "docsrs"]
